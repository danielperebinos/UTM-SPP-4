name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  check:
    name: 🧹 Code Quality & Lint Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code ✅
        uses: actions/checkout@v3

      - name: Install Python and ruff 🐍✨
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install ruff 🛠️
        run: pip install ruff

      - name: Run ruff lint (check) 🔍
        run: ruff check .

      - name: Run ruff format (fix) 🎨
        run: ruff format .

  build:
    needs: check
    environment: Production
    name: 🐳 Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🔐 Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🐳 Build and push Docker image with SHA tag
        uses: docker/build-push-action@v5
        with:
          context: .
          file: deployment/docker/Dockerfile
          push: true
          tags: refjs/utmacdjango:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    name: 🚀 Deploy to Google Kubernetes Engine
    environment: Production
    env:
      GCP_PROJECT: apcloudlab
      GCP_ZONE: us-central1-c
      GCP_CLUSTER: exoticcluster
      GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
      IMAGE_TAG: refjs/utmacdjango:${{ github.sha }}

    steps:
      - name: Checkout code ✅📥
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud 🔐☁️
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ env.GCP_SA_KEY }}

      - name: Set up gcloud CLI ☁️⚙️
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT }}
          install_components: kubectl

      - name: Configure kubectl 🛠️🐳
        run: |
          gcloud container clusters get-credentials $GCP_CLUSTER --zone $GCP_ZONE --project $GCP_PROJECT

      - name: Deploy with rolling update 🚀🔥🎉
        run: |
          kubectl set image deployment/exotic-api exotic-api=$IMAGE_TAG
          kubectl rollout status deployment/exotic-api
